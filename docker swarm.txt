Prerequisites:

Docker installed on all nodes
Step 1: Initialize Docker Swarm on Manager Node

On the designated manager node, run the following command to initialize the Docker Swarm:

bash
Copy code
docker swarm init
This command will provide you with a token to join worker nodes to the Swarm.

Step 2: Join Worker Node to the Swarm

On the worker node, use the token obtained from the previous step to join the Swarm:

bash
Copy code
docker swarm join --token <TOKEN> <MANAGER-IP>:<MANAGER-PORT>
Replace <TOKEN> with the token provided by the manager and <MANAGER-IP>:<MANAGER-PORT> with the IP address and port of the manager node.

Step 3: Deploy a Service

Let's deploy a simple web service using Nginx. Run the following command on the manager node:

bash
Copy code
docker service create --name nginx-service --replicas 3 -p 80:80 nginx
This command creates a service named nginx-service with 3 replicas, mapping port 80 on the host to port 80 in the container, using the official Nginx image.

Step 4: Scale the Service

To scale the service up or down, you can use the following command:

bash
Copy code
docker service scale nginx-service=5
This scales the nginx-service to 5 replicas.

Step 5: Inspect the Service

You can inspect the service to see its details:

bash
Copy code
docker service inspect nginx-service
Step 6: Remove the Service

To remove the service, run:

bash
Copy code
docker service rm nginx-service
Conclusion:

In this tutorial, you've learned the basics of setting up a Docker Swarm cluster, deploying a service, scaling it, and inspecting it. 
Docker Swarm simplifies the management of containerized applications across a cluster of machines, making it easier to deploy, scale, and manage containerized applications